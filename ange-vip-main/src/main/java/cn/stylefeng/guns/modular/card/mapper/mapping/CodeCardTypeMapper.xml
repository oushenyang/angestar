<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stylefeng.guns.modular.card.mapper.CodeCardTypeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.stylefeng.guns.modular.card.entity.CodeCardType">
        <id column="card_type_id" property="cardTypeId" />
        <result column="app_id" property="appId" />
        <result column="card_type_name" property="cardTypeName" />
        <result column="card_time_type" property="cardTimeType" />
        <result column="card_type_data" property="cardTypeData" />
        <result column="card_type_prefix" property="cardTypePrefix" />
        <result column="card_type_rule" property="cardTypeRule" />
        <result column="card_type_length" property="cardTypeLength" />
        <result column="card_type_price" property="cardTypePrice" />
        <result column="card_type_agent_price" property="cardTypeAgentPrice" />
        <result column="status" property="status" />
        <result column="sort" property="sort" />
        <result column="revision" property="revision" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        cct.card_type_id AS "cardTypeId",
        cct.app_id AS "appId",
        cct.card_type_name AS "cardTypeName",
        cct.card_time_type AS "cardTimeType",
        cct.card_type_data AS "cardTypeData",
        cct.card_type_prefix AS "cardTypePrefix",
        cct.card_type_rule AS "cardTypeRule",
        cct.card_type_length AS "cardTypeLength",
        cct.card_type_price AS "cardTypePrice",
        cct.card_type_agent_price AS "cardTypeAgentPrice",
        cct.status AS "status",
        cct.sort AS "sort",
        cct.revision AS "revision",
        cct.create_user AS "createUser",
        cct.create_time AS "createTime",
        cct.update_user AS "updateUser",
        cct.update_time AS "updateTime"
    </sql>
    <select id="findListBySpec" resultType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ag_code_card_type cct
        <where>
            <if test="param.createUser != null and param.createUser != ''">
                and cct.create_user = #{param.createUser}
            </if>
            <if test="param.appId != null and param.appId !=''">
                and cct.app_id = #{param.appId}
            </if>
            <if test="param.cardTypeName != null and param.cardTypeName !=''">
                and cct.card_type_name like CONCAT('%',#{param.cardTypeName},'%')
            </if>
        </where>
        order by cct.sort ASC
    </select>
    <select id="findCardTypeByUserId" resultType="cn.stylefeng.guns.modular.card.entity.CodeCardType">
        select
        cct.*
        from ag_code_card_type cct
        where
        cct.create_user = #{userId}
    </select>

    <select id="addCardTypeBySql" resultType="java.lang.Void">
       ${sqlStr}
    </select >
    <select id="findCardTypeByAppIdAndCardTypeIds"
            resultType="cn.stylefeng.guns.modular.card.entity.CodeCardType">
        select
        cct.*
        from ag_code_card_type cct
        where
        cct.create_user = #{userId}
        <if test="cardTypeIds != null and cardTypeIds.size > 0">
            and cct.card_type_id not in
            <foreach collection="cardTypeIds" index="index" item="item" separator="," open="(" close=")">
                #{item,jdbcType=BIGINT}
            </foreach>
        </if>
    </select>
    <select id="findAgentCardResultByAppIdAndCardTypeIds"
            resultType="cn.stylefeng.guns.modular.agent.model.result.AgentCardResult">
        select
        cct.*
        from ag_code_card_type cct
        where
        cct.create_user = #{userId}
        order by cct.sort ASC
    </select>

</mapper>
