<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stylefeng.guns.modular.account.mapper.AccountInfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.stylefeng.guns.modular.account.entity.AccountInfo">
        <id column="account_id" property="accountId" />
        <result column="app_id" property="appId" />
        <result column="account" property="account" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="qq" property="qq" />
        <result column="password" property="password" />
        <result column="account_status" property="accountStatus" />
        <result column="registration_time" property="registrationTime" />
        <result column="expire_time" property="expireTime" />
        <result column="account_point" property="accountPoint" />
        <result column="surplus_point" property="surplusPoint" />
        <result column="referrer" property="referrer" />
        <result column="referrer_code" property="referrerCode" />
        <result column="account_data" property="accountData" />
        <result column="account_token" property="accountToken" />
        <result column="account_bind_type" property="accountBindType" />
        <result column="account_bind_num" property="accountBindNum" />
        <result column="account_open_range" property="accountOpenRange" />
        <result column="account_open_num" property="accountOpenNum" />
        <result column="remark" property="remark" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        ai.app_name AS appName,
        aci.account_id AS "accountId",
        aci.app_id AS "appId",
        aci.account AS "account",
        aci.email AS "email",
        aci.phone AS "phone",
        aci.qq AS "qq",
        aci.password AS "password",
        aci.account_status AS "accountStatus",
        aci.registration_time AS "registrationTime",
        aci.expire_time AS "expireTime",
        aci.account_point AS "accountPoint",
        aci.surplus_point AS "surplusPoint",
        aci.referrer AS "referrer",
        aci.referrer_code AS "referrerCode",
        aci.account_data AS "accountData",
        aci.account_token AS "accountToken",
        aci.account_bind_type AS "accountBindType",
        aci.account_bind_num AS "accountBindNum",
        aci.account_open_range AS "accountOpenRange",
        aci.account_open_num AS "accountOpenNum",
        aci.remark AS "remark",
        aci.create_user AS "createUser",
        aci.create_time AS "createTime",
        aci.update_user AS "updateUser",
        aci.update_time AS "updateTime"
    </sql>
    <select id="findListBySpec" resultType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ag_account_info aci
        left join ag_app_info ai on ai.app_id = aci.app_id
        <where>
            <if test="param.createUser != null and param.createUser != ''">
                and aci.create_user = #{param.createUser}
            </if>
            <if test="param.appId != null and param.appId !=''">
                and aci.app_id = #{param.appId}
            </if>
        </where>
        order by aci.create_time DESC
    </select>
    <select id="accountNum" resultType="java.lang.Integer">
        select
        count(account_id)
        from ag_account_info
        where create_user = #{userId}
    </select>
    <select id="getAccountMonth" resultType="cn.stylefeng.guns.modular.account.model.result.AccountMonth">
        select
        (SELECT count(account_id) FROM ag_account_info WHERE DATE(expire_time) = s.date) expireNum,
        count(u.account_id) as activeNum,
        s.date as registrationTime
        from
        (select date_add(#{date},interval @i:=@i+1 day) as date
        from (
        select 1
        <foreach item="index" collection="countArr">
            union all select 1
        </foreach>
        ) as tmp,
        (select @i:= -1) t
        ) s left join ag_account_info u on s.date = date_format(u.registration_time,'%Y-%m-%d')
        GROUP BY s.date
    </select>

</mapper>
