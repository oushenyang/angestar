<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stylefeng.guns.modular.app.mapper.AppInfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.stylefeng.guns.modular.app.entity.AppInfo">
        <id column="app_id" property="appId" />
        <result column="app_num" property="appNum" />
        <result column="app_no" property="appNo" />
        <result column="app_head" property="appHead" />
        <result column="user_id" property="userId" />
        <result column="app_name" property="appName" />
        <result column="cydia_flag" property="cydiaFlag" />
        <result column="app_notice" property="appNotice" />
        <result column="card_num" property="cardNum" />
        <result column="account_num" property="accountNum" />
        <result column="custom_data1" property="customData1" />
        <result column="code_bind_type" property="codeBindType" />
        <result column="code_bind_option" property="codeBindOption" />
        <result column="code_bind_num" property="codeBindNum" />
        <result column="code_afresh_bind_num" property="codeAfreshBindNum" />
        <result column="code_afresh_bind_time" property="codeAfreshBindTime" />
        <result column="account_bind_type" property="accountBindType" />
        <result column="account_bind_option" property="accountBindOption" />
        <result column="account_bind_num" property="accountBindNum" />
        <result column="account_again_bind_num" property="accountAfreshBindNum" />
        <result column="account_again_bind_time" property="accountAfreshBindTime" />
        <result column="code_open_range" property="codeOpenRange" />
        <result column="code_sign_type" property="codeSignType" />
        <result column="code_clear_space" property="codeClearSpace" />
        <result column="code_open_num" property="codeOpenNum" />
        <result column="account_open_range" property="accountOpenRange" />
        <result column="account_sign_type" property="accountSignType" />
        <result column="account_clear_space" property="accountClearSpace" />
        <result column="account_open_num" property="accountOpenNum" />
        <result column="code_try_type" property="codeTryType" />
        <result column="code_try_time" property="codeTryTime" />
        <result column="account_register_switch" property="accountRegisterSwitch" />
        <result column="account_register_limit" property="accountRegisterLimit" />
        <result column="account_register_num" property="accountRegisterNum" />
        <result column="account_register_time" property="accountRegisterTime" />
        <result column="web_algorithm_range" property="webAlgorithmRange" />
        <result column="web_algorithm_type" property="webAlgorithmType" />
        <result column="encryption_mode" property="encryptionMode" />
        <result column="fill" property="fill" />
        <result column="web_algorithm_output" property="webAlgorithmOutput" />
        <result column="web_key" property="webKey" />
        <result column="web_salt" property="webSalt" />
        <result column="sign_flag" property="signFlag" />
        <result column="other_sign" property="otherSign" />
        <result column="proving_url" property="provingUrl" />
        <result column="card_login_url" property="cardLoginUrl" />
        <result column="version_num" property="versionNum" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        app_id AS "appId",
        app_num AS "appNum",
        app_no AS "appNo",
        user_id AS "userId",
        app_name AS "appName",
        cydia_flag AS "cydiaFlag",
        app_notice AS "appNotice",
        custom_data1 AS "customData1",
        code_bind_type AS "codeBindType",
        code_bind_option AS "codeBindOption",
        code_bind_num AS "codeBindNum",
        code_afresh_bind_num AS "codeAfreshBindNum",
        code_afresh_bind_time AS "codeAfreshBindTime",
        account_bind_type AS "accountBindType",
        account_bind_option AS "accountBindOption",
        account_bind_num AS "accountBindNum",
        account_again_bind_num AS "accountAfreshBindNum",
        account_again_bind_time AS "accountAfreshBindTime",
        code_open_range AS "codeOpenRange",
        code_sign_type AS "codeSignType",
        code_clear_space AS "codeClearSpace",
        code_open_num AS "codeOpenNum",
        account_open_range AS "accountOpenRange",
        account_sign_type AS "accountSignType",
        account_clear_space AS "accountClearSpace",
        account_open_num AS "accountOpenNum",
        code_try_type AS "codeTryType",
        code_try_time AS "codeTryTime",
        account_register_switch AS "accountRegisterSwitch",
        account_register_limit AS "accountRegisterLimit",
        account_register_num AS "accountRegisterNum",
        account_register_time AS "accountRegisterTime",
        web_algorithm_type AS "webAlgorithmType",
        encryption_mode AS "encryptionMode",
        fill AS "fill",
        web_algorithm_output AS "webAlgorithmOutput",
        web_key AS "webKey",
        web_salt AS "webSalt",
        sign_flag AS "signFlag",
        other_sign AS "otherSign",
        proving_url AS "provingUrl",
        card_login_url AS "cardLoginUrl",
        version_num AS "versionNum",
        create_user AS "createUser",
        create_time AS "createTime",
        update_user AS "updateUser",
        update_time AS "updateTime"
    </sql>
    <select id="findAppInfoList" resultType="cn.stylefeng.guns.modular.app.model.params.AppInfoParam">
        select app_name, app_id from ag_app_info WHERE user_id = #{userId}
    </select>
    <select id="findListBySpec" resultType="cn.stylefeng.guns.modular.app.model.result.AppInfoResult">
        select
        ai.app_name AS appName,
        ai.app_no AS appNo,
        ai.app_head AS appHead,
        (select count(aci.card_id) from ag_card_info aci where aci.app_id = ai.app_id) AS cardNum,
        (select count(aai.account_id) from ag_account_info aai where aai.app_id = ai.app_id) AS accountNum,
        ae.edition_num AS editionNum,
        ai.app_id AS appId
        from ag_app_info ai
        left join ag_app_edition ae on ae.edition_id = ai.version_num
        <where>
            <if test="param.userId != null and param.userId != ''">
                and ai.create_user = #{param.userId}
            </if>
            <if test="param.appName != null and param.appName != ''">
                and ai.app_name like CONCAT('%',#{param.appName},'%')
            </if>
            <if test="param.createUser != null and param.createUser != ''">
                and ai.create_user = #{param.createUser}
            </if>
        </where>
    </select>
    <select id="findAppInfoApi" resultType="cn.stylefeng.guns.sys.core.exception.AppInfoApi">
        select
        app_id AS "appId",
        app_no AS "appNo",
        app_num AS "appNum",
        app_quick AS "appQuick",
        cydia_flag AS "cydiaFlag",
        app_notice AS "appNotice",
        code_bind_type AS "codeBindType",
        code_bind_option AS "codeBindOption",
        code_bind_num AS "codeBindNum",
        code_afresh_bind_num AS "codeAfreshBindNum",
        code_afresh_bind_time AS "codeAfreshBindTime",
        account_bind_option AS "accountBindOption",
        account_bind_num AS "accountBindNum",
        account_again_bind_num AS "accountAfreshBindNum",
        account_again_bind_time AS "accountAfreshBindTime",
        code_open_range AS "codeOpenRange",
        code_sign_type AS "codeSignType",
        code_clear_space AS "codeClearSpace",
        code_open_num AS "codeOpenNum",
        account_open_range AS "accountOpenRange",
        account_sign_type AS "accountSignType",
        account_clear_space AS "accountClearSpace",
        account_open_num AS "accountOpenNum",
        code_try_type AS "codeTryType",
        code_try_time AS "codeTryTime",
        account_register_switch AS "accountRegisterSwitch",
        account_register_limit AS "accountRegisterLimit",
        account_register_num AS "accountRegisterNum",
        account_register_time AS "accountRegisterTime",
        web_algorithm_range AS "webAlgorithmRange",
        web_algorithm_type AS "webAlgorithmType",
        encryption_mode AS "encryptionMode",
        fill AS "fill",
        web_algorithm_output AS "webAlgorithmOutput",
        web_key AS "webKey",
        web_salt AS "webSalt",
        sign_flag AS "signFlag",
        other_sign AS "otherSign",
        proving_url AS "provingUrl",
        card_login_url AS "cardLoginUrl",
        create_user AS "createUser"
        from ag_app_info
        <where>
            <if test="callCode != null and callCode != ''">
                app_num = #{callCode}
            </if>
        </where>
        LIMIT 1
    </select>
    <select id="getAgentAppInfoList" resultType="cn.stylefeng.guns.modular.app.model.params.AppInfoParam">
        SELECT
        aai.*,
        aaa.agent_app_id,
        aaa.developer_user_id
        FROM
        ag_app_info aai
        LEFT JOIN ag_agent_app aaa ON aaa.app_id = aai.app_id
        WHERE
        aaa.agent_user_id = #{agentUserId}
    </select>
    <select id="appNum" resultType="java.lang.Integer">
        SELECT COUNT(app_id) FROM ag_app_info where create_user = #{userId}
    </select>
    <select id="getAppIdList" resultType="java.lang.Long">
        select app_id from ag_app_info
    </select>
</mapper>
