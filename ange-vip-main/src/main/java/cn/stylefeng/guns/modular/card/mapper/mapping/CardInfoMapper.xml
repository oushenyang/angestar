<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stylefeng.guns.modular.card.mapper.CardInfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.stylefeng.guns.modular.card.entity.CardInfo">
        <id column="card_id" property="cardId" />
        <result column="app_id" property="appId" />
        <result column="card_type_id" property="cardTypeId" />
        <result column="user_id" property="userId" />
        <result column="user_name" property="userName" />
        <result column="is_universal" property="isUniversal" />
        <result column="card_code" property="cardCode" />
        <result column="is_custom_time" property="isCustomTime" />
        <result column="custom_time_num" property="customTimeNum" />
        <result column="card_status" property="cardStatus" />
        <result column="card_mac" property="cardMac" />
        <result column="card_ip" property="cardIp" />
        <result column="card_token" property="cardToken" />
        <result column="active_time" property="activeTime" />
        <result column="expire_time" property="expireTime" />
        <result column="card_bind_type" property="cardBindType" />
        <result column="card_open_range" property="cardOpenRange" />
        <result column="card_open_num" property="cardOpenNum" />
        <result column="card_remark" property="cardRemark" />
        <result column="prohibit_remark" property="prohibitRemark" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        ai.app_name AS appName,
        cct.card_type_name AS cardTypeName,
        cci.card_id AS "cardId",
        cci.app_id AS "appId",
        cci.card_type_id AS "cardTypeId",
        cci.user_id AS "userId",
        cci.user_name AS "userName",
        cci.is_universal AS "isUniversal",
        cci.card_code AS "cardCode",
        cci.is_custom_time AS "isCustomTime",
        cci.custom_time_num AS "customTimeNum",
        cci.card_status AS "cardStatus",
        cci.card_mac AS "cardMac",
        cci.card_ip AS "cardIp",
        cci.card_token AS "cardToken",
        cci.active_time AS "activeTime",
        cci.expire_time AS "expireTime",
        cci.card_bind_type AS "cardBindType",
        cci.card_open_range AS "cardOpenRange",
        cci.card_open_num AS "cardOpenNum",
        cci.card_remark AS "cardRemark",
        cci.prohibit_remark AS "prohibitRemark",
        cci.create_user AS "createUser",
        cci.create_time AS "createTime",
        cci.update_user AS "updateUser",
        cci.update_time AS "updateTime"
    </sql>
    <insert id="saveCardBatch">
        INSERT INTO `ag_card_info` (
        `card_id`,
        `app_id`,
        `card_type_id`,
        `user_id`,
        `user_name`,
        `is_universal`,
        `card_code`,
        `is_custom_time`,
        `custom_time_num`,
        `card_status`,
        `active_time`,
        `expire_time`,
        `card_bind_type`,
        `card_open_range`,
        `card_open_num`,
        `card_remark`,
        `create_user`,
        `create_time`
        )
        VALUES
        <foreach collection ="cardInfos" item="cardInfo" separator =",">
            (#{cardInfo.cardId},
            #{cardInfo.appId},
            #{cardInfo.cardTypeId},
            #{cardInfo.userId},
            #{cardInfo.userName},
            #{cardInfo.isUniversal},
            #{cardInfo.cardCode},
            #{cardInfo.isCustomTime},
            #{cardInfo.customTimeNum},
            #{cardInfo.cardStatus},
            #{cardInfo.activeTime},
            #{cardInfo.expireTime},
            #{cardInfo.cardBindType},
            #{cardInfo.cardOpenRange},
            #{cardInfo.cardOpenNum},
            #{cardInfo.cardRemark},
            #{cardInfo.createUser},
            #{cardInfo.createTime}
            )
        </foreach >
    </insert>
    <update id="BachUpdateCardInfo">
        update ag_card_info
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="card_status =case" suffix="end,">
                <foreach collection="cardInfos" item="item" index="index">
                    <if test="item.cardStatus !=null and item.cardStatus != -1">
                        when card_id=#{item.cardId} then #{item.cardStatus}
                    </if>
                    <if test="item.cardStatus == null or item.cardStatus == -1">
                        when card_id=#{item.cardId} then ag_card_info.card_Status
                    </if>
                </foreach>
            </trim>
            <trim prefix="prohibit_remark =case" suffix="end,">
                <foreach collection="cardInfos" item="item" index="index">
                    <if test="item.prohibitRemark !=null">
                        when card_id=#{item.cardId} then #{item.prohibitRemark}
                    </if>
                    <if test="item.prohibitRemark == null">
                        when card_id=#{item.cardId} then ag_card_info.prohibit_remark
                    </if>
                </foreach>
            </trim>
            <trim prefix="whether_add_time =case" suffix="end,">
                <foreach collection="cardInfos" item="item" index="index">
                    <if test="item.whetherAddTime !=null">
                        when card_id=#{item.cardId} then #{item.whetherAddTime}
                    </if>
                    <if test="item.whetherAddTime == null">
                        when card_id=#{item.cardId} then ag_card_info.whether_add_time
                    </if>
                </foreach>
            </trim>
            <trim prefix="add_day_num =case" suffix="end,">
                <foreach collection="cardInfos" item="item" index="index">
                    <if test="item.addDayNum !=null">
                        when card_id=#{item.cardId} then #{item.addDayNum}
                    </if>
                    <if test="item.addDayNum == null">
                        when card_id=#{item.cardId} then ag_card_info.add_day_num
                    </if>
                </foreach>
            </trim>
            <trim prefix="add_hour_num =case" suffix="end,">
                <foreach collection="cardInfos" item="item" index="index">
                    <if test="item.addHourNum !=null">
                        when card_id=#{item.cardId} then #{item.addHourNum}
                    </if>
                    <if test="item.addHourNum == null">
                        when card_id=#{item.cardId} then ag_card_info.add_hour_num
                    </if>
                </foreach>
            </trim>
            <trim prefix="add_minute_num =case" suffix="end,">
                <foreach collection="cardInfos" item="item" index="index">
                    <if test="item.addMinuteNum !=null">
                        when card_id=#{item.cardId} then #{item.addMinuteNum}
                    </if>
                    <if test="item.addMinuteNum == null">
                        when card_id=#{item.cardId} then ag_card_info.add_minute_num
                    </if>
                </foreach>
            </trim>
            <trim prefix="expire_time =case" suffix="end,">
                <foreach collection="cardInfos" item="item" index="index">
                    <if test="item.expireTime !=null">
                        when card_id=#{item.cardId} then #{item.expireTime}
                    </if>
                    <if test="item.expireTime == null">
                        when card_id=#{item.cardId} then ag_card_info.expire_time
                    </if>
                </foreach>
            </trim>
            <trim prefix="card_remark =case" suffix="end,">
                <foreach collection="cardInfos" item="item" index="index">
                    <if test="item.cardRemark !=null">
                        when card_id=#{item.cardId} then #{item.cardRemark}
                    </if>
                    <if test="item.cardRemark == null">
                        when card_id=#{item.cardId} then ag_card_info.card_remark
                    </if>
                </foreach>
            </trim>
        </trim>
        where card_id in
        <foreach collection="cardInfos" index="index" item="item" separator="," open="(" close=")">
            #{item.cardId,jdbcType=BIGINT}
        </foreach>
    </update>
    <select id="findListBySpec" resultType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from ag_card_info cci
        left join ag_app_info ai on ai.app_id = cci.app_id
        left join ag_code_card_type cct on cct.card_type_id = cci.card_type_id
        <where>
            <if test="param.createUser != null and param.createUser != ''">
                and cci.create_user = #{param.createUser}
            </if>
            <if test="param.userId != null and param.userId != ''">
                and (cci.user_id = #{param.userId} or cci.user_id in ( select agent_user_id from ag_agent_app where pids like CONCAT('%$[', #{param.userId}, '$]%') escape '$' ))
            </if>
            <if test="param.appId != null and param.appId !=''">
                and cci.app_id = #{param.appId}
            </if>
            <if test="param.actCardAppId != null and param.actCardAppId !=''">
                and cci.app_id = #{param.actCardAppId} or cci.app_id = 0
            </if>
            <if test="param.type != null and param.type !=1">
                and cci.app_id = 0
            </if>
            <if test="param.type != null and param.type !=0">
                and cci.app_id != 0
            </if>
            <if test="param.cardTypeId != null and param.cardTypeId !=''">
                and cci.card_type_id = #{param.cardTypeId}
            </if>
            <if test="param.cardCode != null and param.cardCode !=''">
                and cci.card_code like CONCAT('%',#{param.cardCode},'%')
            </if>
        </where>
        order by cci.create_time DESC
    </select>
    <select id="selectByBatchCardInfo" resultType="cn.stylefeng.guns.modular.card.entity.CardInfo">
        select
        *
        from ag_card_info
        <where>
            <if test="param.operateApp != null and param.operateApp !=1">
                and app_id = #{param.operateApp}
            </if>
            <if test="param.cardType != null and param.cardType !=1">
                and card_type_id = #{param.cardType}
            </if>
            <if test="param.cardStatus != null and param.cardStatus !=1">
                and card_status = #{param.cardStatus}
            </if>
            <if test="param.createUser != null and param.createUser !=1">
                and create_user = #{param.createUser}
            </if>
        </where>
    </select>
    <select id="getCardInfoByAppIdAndCardCode" resultType="cn.stylefeng.guns.modular.card.entity.CardInfo">
        select
        *
        from ag_card_info
        <where>
            <if test="appId != null">
                and app_id = #{appId}
            </if>
            <if test="singleCode != null">
                and card_code = #{singleCode}
            </if>
        </where>
        limit 1
    </select>

</mapper>
