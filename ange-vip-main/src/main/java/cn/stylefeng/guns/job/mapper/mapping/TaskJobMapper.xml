<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stylefeng.guns.job.mapper.TaskJobMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="cn.stylefeng.guns.job.entity.TaskJob">
		<id column="job_id" property="jobId" />
		<result column="job_name" property="jobName" />
		<result column="job_group" property="jobGroup" />
		<result column="invoke_target" property="invokeTarget" />
		<result column="cron_expression" property="cronExpression" />
		<result column="misfire_policy" property="misfirePolicy" />
		<result column="status" property="status" />
		<result column="create_by" property="createBy" />
		<result column="create_time" property="createTime" />
		<result column="update_by" property="updateBy" />
		<result column="update_time" property="updateTime" />
		<result column="remark" property="remark" />
		<result column="suspende" property="suspende" />
	</resultMap>

	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
        o.job_id AS "jobId",
        o.job_name AS "jobName",
        o.job_group AS "jobGroup",
        o.invoke_target AS "invokeTarget",
        o.cron_expression AS "cronExpression",
        o.misfire_policy AS "misfirePolicy",
        o.status AS "status",
        o.create_by AS "createBy",
        o.create_time AS "createTime",
        o.update_by AS "updateBy",
        o.update_time AS "updateTime",
        o.remark AS "remark",
        o.suspende AS "suspende"
    </sql>
	<update id="udateCronLog">
		UPDATE sys_task_job_log set filesUrl =#{map.filesUrl},udateTime = NOW() where jobId = #{map.jobId}
	</update>
    <delete id="deleteLog">
		DELETE FROM sys_task_job_log WHERE creatTime &lt; (NOW() - INTERVAL 7 DAY)
	</delete>

    <select id="selectCronLogCount" resultType="java.lang.Integer">
		select count(1) FROM sys_task_job_log where jobId = #{map.jobId}
	</select>
	<insert id="insertCronLog">
		insert INTO sys_task_job_log(id,jobId,jobKey,status,msg,updateTime,creatTime)VALUES (#{map.id},#{map.jobId},#{map.jobKey},#{map.status},#{map.msg},#{map.updateTime},#{map.creatTime})
	</insert>

<!--	<select id="findForPage" resultType="com.jtech.toa.project.common.FormMap">-->
<!--		select o.*,t.NEXT_FIRE_TIME next_time,t.PREV_FIRE_TIME prev_time,jl.filesUrl from sys_task_job o-->
<!--		left join qrtz_triggers t on t.TRIGGER_NAME = CONCAT('TASK_CLASS_NAME',o.job_id)-->
<!--		left join sys_task_job_log jl on jl.jobId  = o.job_id-->
<!--		<where>-->
<!--			<if test="map.jobName!=null and map.jobName!=''"> and o.job_name = #{map.jobName}  </if>-->
<!--			<if test="map.status!=null and map.status!=''"> and o.status = #{map.status} </if>-->
<!--			<if test="map.userId!=null and map.userId!=''"> and o.create_by = #{map.userId} </if>-->
<!--		</where>-->
<!--	</select>-->

	<select id="selectJobAll" resultMap="BaseResultMap">
		select * from sys_task_job
	</select>

	<select id="findJobById" resultMap="BaseResultMap">
		select * from sys_task_job where job_id = #{jobId}
	</select>
    <select id="findListBySpec" resultType="java.util.Map">
				select FROM_UNIXTIME(CONVERT(t.NEXT_FIRE_TIME/1000 , signed),"%Y-%m-%d %H:%i:%s") nextTime,FROM_UNIXTIME(CONVERT(t.PREV_FIRE_TIME/1000 , signed),"%Y-%m-%d %H:%i:%s") prevTime,
		        <include refid="Base_Column_List"/>
				from sys_task_job o
				left join qrtz_triggers t on t.TRIGGER_NAME = CONCAT('TASK_CLASS_NAME',o.job_id)
				<where>
					<if test="param.jobName!=null and param.jobName!=''">
					 and o.job_name like CONCAT('%',#{param.jobName},'%')
					</if>
					<if test="param.status!=null and param.status!=''">
					 and o.status = #{param.status}
					</if>
				</where>
	</select>
    <select id="findLogListBySpec" resultType="java.util.Map">
		select * from sys_task_job_log
		<where>
			<if test="param.jobId!=null and param.jobId!=''">
				and jobId = #{param.jobId}
			</if>
			<if test="param.status!=null and param.status!=''">
				and status = #{param.status}
			</if>
			<if test="param.beginTime != null and param.beginTime !=''">
				and creatTime >= #{param.beginTime}
			</if>
			<if test="param.endTime != null and param.endTime !=''">
				and creatTime &lt;= #{param.endTime}
			</if>
		</where>
	</select>


</mapper>
